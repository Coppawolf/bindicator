name: Generate Buckinghamshire bins ICS

on:
  schedule:
    - cron: "0 9 * * 1"   # Mondays 09:00 UK (UTC in winter; adjust if you like)
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UPRN: "100080513727"
      COUNCIL: "BuckinghamshireCouncil"
      SOURCE_URL: "https://www.buckinghamshire.gov.uk/waste-and-recycling/find-out-when-its-your-bin-collection/"
      CAL_NAME: "Buckinghamshire Bins"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Chrome for Testing (works reliably in Actions)
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Show Chrome version
        run: |
          echo "Chrome path: $CHROME_PATH"
          $CHROME_PATH --version

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          # cryptography as a wheel to avoid building from source
          python -m pip install --only-binary=:all: cryptography
          python -m pip install \
            pandas holidays requests icalendar beautifulsoup4 lxml \
            selenium webdriver-manager cffi
          git clone https://github.com/robbrad/UKBinCollectionData.git ukbcd

      - name: Collect JSON (Bucks)
        working-directory: ukbcd
        env:
          CHROME_BINARY: ${{ env.CHROME_PATH }}
        run: |
          python - <<'PY'
          import os, sys, subprocess, json, textwrap
          cmd = [
              sys.executable, "-m", "uk_bin_collection.uk_bin_collection.collect_data",
              os.environ.get("COUNCIL", "BuckinghamshireCouncil"),
              os.environ.get("SOURCE_URL"),
              "-u", os.environ.get("UPRN"),
              "--headless", "-w", "chrome"
          ]
          print("Running:", " ".join(cmd), flush=True)
          # Helpful flags for Chrome in CI
          os.environ["SE_OPTIONS"] = "--no-sandbox --disable-dev-shm-usage --disable-gpu --remote-allow-origins=*"
          out = subprocess.run(cmd, capture_output=True, text=True)
          if out.stderr:
              print(out.stderr)
          open("../bucks.json", "w", encoding="utf-8").write(out.stdout)
          if not out.stdout.strip():
              print("ERROR: Collector produced no output", file=sys.stderr)
              sys.exit(1)
          PY
          test -s ../bucks.json
          echo "First lines of bucks.json:"
          head -n 30 ../bucks.json

      - name: Build ICS from JSON
        working-directory: ukbcd
        run: |
          python bin_to_ics.py --input ../bucks.json --output ../bins.ics --name "$CAL_NAME"
          test -s ../bins.ics
          echo "First lines of bins.ics:"
          head -n 30 ../bins.ics

      - name: Prepare site (gh-pages)
        run: |
          mkdir -p public
          cp bins.ics public/
          cat > public/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <title>Bindicator</title>
          <p>Latest <code>bins.ics</code> generated by GitHub Actions.</p>
          <p><a href="bins.ics">Download bins.ics</a></p>
          HTML

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
